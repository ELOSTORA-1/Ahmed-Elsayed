pipeline {
    agent any
    
    environment {
        SSH_CREDENTIALS_ID = 'jenkins-id'
        DEPLOY_SERVER = '192.168.1.2'
        DOTNET_VERSION = '9.0'
        DEPLOY_PATH = '/home/Ahmed-Elsayed/App/dotnet/dotnet-app'
    }
    
    stages {
        stage('Fetch Code') {
            steps {
                git url: 'https://github.com/ELOSTORA-1/dotnet.git', branch: 'main'
            }
        }
        
        stage('Restore And Build') {
            steps {
                sh 'dotnet restore'
                sh 'dotnet build --configuration Release --no-restore'
            }
        }
        
        stage('Publish App') {
            steps {
                sh 'dotnet publish -c Release -o ./publish-output --no-build'
            }
        }
        
        stage('Deploy to Server') {
            steps {
                sshagent(credentials: ["${SSH_CREDENTIALS_ID}"]) {
                    // Create remote directory
                    sh "ssh -o StrictHostKeyChecking=no root@${DEPLOY_SERVER} 'rm -rf ${DEPLOY_PATH}'"
                    sh "ssh -o StrictHostKeyChecking=no root@${DEPLOY_SERVER} 'mkdir -p ${DEPLOY_PATH}'"
                    // Copy Publish Data to Server
                    sh """
                        rsync -avz -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" \
                            ./publish-output/ root@${DEPLOY_SERVER}:${DEPLOY_PATH}/
                       """
                    sh "ssh -o StrictHostKeyChecking=no root@${DEPLOY_SERVER} 'chown root:root -R ${DEPLOY_PATH}'"  
                    // Stop and remove container and image if they exist
                    sh "ssh -o StrictHostKeyChecking=no root@${DEPLOY_SERVER} 'docker container stop dotnet || true'"
                    sh "ssh -o StrictHostKeyChecking=no root@${DEPLOY_SERVER} 'docker container rm dotnet || true'"
                    sh "ssh -o StrictHostKeyChecking=no root@${DEPLOY_SERVER} 'docker image rm dotnet || true'"
                    // Build new Docker image and run container
                    sh "ssh -o StrictHostKeyChecking=no root@${DEPLOY_SERVER} 'cp /home/Ahmed-Elsayed/App/dotnet/dotnet/Dockerfile ${DEPLOY_PATH}'"
                    sh "ssh -o StrictHostKeyChecking=no root@${DEPLOY_SERVER} 'cp /home/Ahmed-Elsayed/App/dotnet/dotnet/.dockerignore ${DEPLOY_PATH}'"
                    sh "ssh -o StrictHostKeyChecking=no root@${DEPLOY_SERVER} 'cd ${DEPLOY_PATH} && docker build --tag dotnet .'"
                    sh "ssh -o StrictHostKeyChecking=no root@${DEPLOY_SERVER} 'docker run -d -p 8080:80 --name dotnet --network host --memory 256M --cpus 1 dotnet'"
                    sh "ssh -o StrictHostKeyChecking=no root@${DEPLOY_SERVER} 'docker ps | grep dotnet && echo SUCCESS || echo FAILURE'"
                    sh "ssh -o StrictHostKeyChecking=no root@${DEPLOY_SERVER} 'docker container start dotnet'"
                }
            }
        }
    }
    
    post {
        failure {
            echo "pipeline failed"
        }
        success {
            echo "pipeline success"
        }
        always {
            cleanWs() // Clean workspace after build
        }
    }
}